{"version":3,"sources":["components/Profile.js","components/LoadingSpinner.js","components/RedError.js","components/ArticlePreview.js","../node_modules/react-tiny-virtual-list/build/react-tiny-virtual-list.es.js","components/ArticleList.js"],"names":["EditProfileSettings","props","isUser","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","mobx_router__WEBPACK_IMPORTED_MODULE_11__","className","view","views","settings","store","FollowUserButton","classes","following","onClick","ev","preventDefault","unfollow","username","follow","Profile","inject","observer","handleFollow","_this","profileStore","handleUnfollow","handleSetPage","page","articlesStore","setPage","loadArticles","this","setPredicate","getPredicate","loadProfile","router","params","previousProps","location","test","currentView","path","getTab","favoritedBy","author","profile","isActive","fav","concat","_this$props","userStore","isLoadingProfile","currentUser","_LoadingSpinner__WEBPACK_IMPORTED_MODULE_7__","_RedError__WEBPACK_IMPORTED_MODULE_8__","message","src","image","alt","bio","renderTabs","_ArticleList__WEBPACK_IMPORTED_MODULE_5__","articles","totalPagesCount","onSetPage","loading","isLoading","React","Component","style","borderRadius","width","height","margin","position","borderTop","borderRight","borderBottom","borderLeft","transform","animation","LoadingSpinner","react__WEBPACK_IMPORTED_MODULE_5___default","wrapperStyle","display","justifyContent","errorStyle","padding","color","fontWeight","backgroundColor","RedError","ArticlePreview","handleClickFavorite","article","favorited","unmakeFavorite","slug","makeFavorite","favoriteButtonClass","react_default","dist","key","Date","createdAt","toDateString","favoritesCount","overflow","zoom","id","title","description","tagList","map","tag","_extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","ALIGNMENT","DIRECTION","SCROLL_CHANGE_REASON","_assign","assign","t","s","i","n","arguments","length","prototype","call","apply","react_tiny_virtual_list_es_a","react_tiny_virtual_list_es_b","react_tiny_virtual_list_es_c","react_tiny_virtual_list_es_d","react_tiny_virtual_list_es_e","scrollProp","VERTICAL","HORIZONTAL","sizeProp","positionProp","marginProp","oppositeMarginProp","SizeAndPositionManager","_a","itemCount","itemSizeGetter","estimatedItemSize","itemSizeAndPositionData","lastMeasuredIndex","updateConfig","getLastMeasuredIndex","getSizeAndPositionForIndex","index","Error","lastMeasuredSizeAndPosition","getSizeAndPositionOfLastMeasuredItem","offset","size","isNaN","getTotalSize","getUpdatedOffsetForIndex","_b","align","START","containerSize","currentOffset","targetIndex","idealOffset","datum","maxOffset","minOffset","END","CENTER","Math","max","min","totalSize","getVisibleRange","overscanCount","start","findNearestItem","stop","resetItem","binarySearch","high","low","exponentialSearch","middle","floor","interval","STYLE_WRAPPER","willChange","WebkitOverflowScrolling","STYLE_INNER","minHeight","STYLE_ITEM","top","left","STYLE_STICKY_ITEM","react_tiny_virtual_list_es","_super","VirtualList","itemSize","getSize","sizeAndPositionManager","getEstimatedItemSize","state","scrollOffset","scrollToIndex","getOffsetForIndex","scrollChangeReason","REQUESTED","styleCache","getRef","node","rootNode","handleScroll","event","onScroll","getNodeOffset","target","setState","OBSERVED","__","constructor","create","__extends","componentDidMount","addEventListener","passive","scrollTo","componentWillReceiveProps","nextProps","scrollToAlignment","scrollPropsHaveChanged","itemPropsHaveChanged","recomputeSizes","componentDidUpdate","_","prevState","componentWillUnmount","removeEventListener","value","scrollDirection","startIndex","render","_e","renderItem","onItemsRendered","_c","stickyIndices","e","indexOf","getOwnPropertySymbols","__rest","_d","items","innerStyle","forEach","push","getStyle","includes","stopIndex","react","ref","isArray","sticky","zIndex","defaultProps","propTypes","prop_types","isRequired","AUTO","ArticleList","_ref","components_ArticlePreview","_ref2","currentPage"],"mappings":"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","file":"static/js/5.0b6472a7.chunk.js","sourcesContent":["import ArticleList from \"./ArticleList\";\nimport React from \"react\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport RedError from \"./RedError\";\n// import { NavLink, Link, withRouter } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\nimport views from \"../config/views\";\nimport { Link } from \"mobx-router\";\n\nconst EditProfileSettings = props => {\n  if (props.isUser) {\n    return (\n      <>\n        {/*<Link*/}\n        {/*to=\"/settings\"*/}\n        {/*className=\"btn btn-sm btn-outline-secondary action-btn\"*/}\n        {/*>*/}\n        {/*<i className=\"ion-gear-a\" /> Edit Profile Settings*/}\n        {/*</Link>*/}\n        <Link\n          className={\"btn btn-sm btn-outline-secondary action-btn\"}\n          view={views.settings}\n          store={props.store}\n        >\n          <i className=\"ion-gear-a\" /> Edit Profile Settings\n        </Link>\n      </>\n    );\n  }\n  return null;\n};\n\nconst FollowUserButton = props => {\n  if (props.isUser) {\n    return null;\n  }\n\n  let classes = \"btn btn-sm action-btn\";\n  if (props.following) {\n    classes += \" btn-secondary\";\n  } else {\n    classes += \" btn-outline-secondary\";\n  }\n\n  const handleClick = ev => {\n    ev.preventDefault();\n    if (props.following) {\n      props.unfollow(props.username);\n    } else {\n      props.follow(props.username);\n    }\n  };\n\n  return (\n    <button className={classes} onClick={handleClick}>\n      <i className=\"ion-plus-round\" />\n      &nbsp;\n      {props.following ? \"Unfollow\" : \"Follow\"} {props.username}\n    </button>\n  );\n};\n\n@inject(\"articlesStore\", \"profileStore\", \"userStore\", \"store\")\n// @withRouter\n@observer\nclass Profile extends React.Component {\n  componentWillMount() {\n    this.props.articlesStore.setPredicate(this.getPredicate());\n  }\n\n  componentDidMount() {\n    this.props.profileStore.loadProfile(\n      this.props.store.router.params.username\n    );\n    this.props.articlesStore.loadArticles();\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.location !== previousProps.location) {\n      this.props.profileStore.loadProfile(\n        this.props.store.router.params.username\n      );\n      this.props.articlesStore.setPredicate(this.getPredicate());\n      this.props.articlesStore.loadArticles();\n    }\n  }\n\n  getTab() {\n    if (/\\/favorites/.test(this.props.store.router.currentView.path))\n      return \"favorites\";\n    return \"all\";\n  }\n\n  getPredicate() {\n    switch (this.getTab()) {\n      case \"favorites\":\n        return { favoritedBy: this.props.store.router.params.username };\n      default:\n        return { author: this.props.store.router.params.username };\n    }\n  }\n\n  handleFollow = () => this.props.profileStore.follow();\n  handleUnfollow = () => this.props.profileStore.unfollow();\n\n  handleSetPage = page => {\n    this.props.articlesStore.setPage(page);\n    this.props.articlesStore.loadArticles();\n  };\n\n  renderTabs() {\n    const { profile } = this.props.profileStore;\n    const isActive = this.props.store.router.params.fav === \"favorites\";\n    return (\n      <ul className=\"nav nav-pills outline-active\">\n        <li className=\"nav-item\">\n          {/*<NavLink*/}\n          {/*className=\"nav-link\"*/}\n          {/*isActive={(match, location) => {*/}\n          {/*return location.pathname.match(\"/favorites\") ? 0 : 1;*/}\n          {/*}}*/}\n          {/*to={`/@${profile.username}`}*/}\n          {/*>*/}\n          {/*My Articles*/}\n          {/*</NavLink>*/}\n          <Link\n            className={`nav-link ${!isActive ? \"active\" : \"\"}`}\n            view={views.profile}\n            store={this.props.store}\n            params={{ username: profile.username }}\n          >\n            My Articles\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          {/*<NavLink className=\"nav-link\" to={`/@${profile.username}/favorites`}>*/}\n          {/*Favorited Articles*/}\n          {/*</NavLink>*/}\n          <Link\n            className={`nav-link ${isActive ? \"active\" : \"\"}`}\n            view={views.profile}\n            store={this.props.store}\n            params={{ username: profile.username, fav: \"favorites\" }}\n          >\n            Favorited Articles\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n\n  render() {\n    const { profileStore, articlesStore, userStore } = this.props;\n    const { profile, isLoadingProfile } = profileStore;\n    const { currentUser } = userStore;\n\n    if (isLoadingProfile && !profile) return <LoadingSpinner />;\n    if (!profile) return <RedError message=\"Can't load profile\" />;\n\n    const isUser = currentUser && profile.username === currentUser.username;\n\n    return (\n      <div className=\"profile-page\">\n        <div className=\"user-info\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-xs-12 col-md-10 offset-md-1\">\n                <img src={profile.image} className=\"user-img\" alt=\"\" />\n                <h4>{profile.username}</h4>\n                <p>{profile.bio}</p>\n\n                <EditProfileSettings isUser={isUser} />\n                <FollowUserButton\n                  isUser={isUser}\n                  username={profile.username}\n                  following={profile.following}\n                  follow={this.handleFollow}\n                  unfollow={this.handleUnfollow}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xs-12 col-md-10 offset-md-1\">\n              <div className=\"articles-toggle\">{this.renderTabs()}</div>\n\n              <ArticleList\n                articles={articlesStore.articles}\n                totalPagesCount={articlesStore.totalPagesCount}\n                onSetPage={this.handleSetPage}\n                loading={articlesStore.isLoading}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n\nexport { Profile };\n","import React from \"react\";\n\nconst style = {\n  borderRadius: \"50%\",\n  width: \"40px\",\n  height: \"40px\",\n  margin: \"90px auto\",\n  position: \"relative\",\n  borderTop: \"3px solid rgba(0, 0, 0, 0.1)\",\n  borderRight: \"3px solid rgba(0, 0, 0, 0.1)\",\n  borderBottom: \"3px solid rgba(0, 0, 0, 0.1)\",\n  borderLeft: \"3px solid #818a91\",\n  transform: \"translateZ(0)\",\n  animation: \"loading-spinner 0.5s infinite linear\"\n};\n\nexport default class LoadingSpinner extends React.Component {\n  render() {\n    return (\n      <div className=\"loading-spinner\" style={style}>\n        <style>\n          {`\n        @keyframes loading-spinner {\n          0% { transform : rotate(0deg); }\n          100% { transform : rotate(360deg); }\n        }\n        `}\n        </style>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst wrapperStyle = {\n  display: \"flex\",\n  justifyContent: \"center\"\n};\n\nconst errorStyle = {\n  display: \"inline-block\",\n  margin: \"20px auto\",\n  borderRadius: \"4px\",\n  padding: \"8px 15px\",\n  color: \"rgb(240, 45, 45)\",\n  fontWeight: \"bold\",\n  backgroundColor: \"rgba(240, 45, 45, 0.1)\"\n};\n\nclass RedError extends React.Component {\n  render() {\n    return (\n      <div style={wrapperStyle}>\n        <div style={errorStyle}>{this.props.message}</div>\n      </div>\n    );\n  }\n}\n\nexport default RedError;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\n\nimport { Link } from \"mobx-router\";\nimport views from \"../config/views\";\n\nconst FAVORITED_CLASS = \"btn btn-sm btn-primary\";\nconst NOT_FAVORITED_CLASS = \"btn btn-sm btn-outline-primary\";\n\n@inject(\"articlesStore\", \"store\")\n@observer\nclass ArticlePreview extends React.Component {\n  handleClickFavorite = ev => {\n    ev.preventDefault();\n    const { articlesStore, article } = this.props;\n    if (article.favorited) {\n      articlesStore.unmakeFavorite(article.slug);\n    } else {\n      articlesStore.makeFavorite(article.slug);\n    }\n  };\n\n  render() {\n    const { article } = this.props;\n    const favoriteButtonClass = article.favorited\n      ? FAVORITED_CLASS\n      : NOT_FAVORITED_CLASS;\n\n    return (\n      <div className=\"article-preview\">\n        <div className=\"article-meta\">\n          {/*<Link to={`/@${article.author.username}`}>*/}\n          {/*<img src={article.author.image} alt=\"\" />*/}\n          {/*</Link>*/}\n          <Link\n            view={views.profile}\n            params={{ username: article.author.username }}\n            store={this.props.store}\n            key={article.author.image}\n          >\n            <img src={article.author.image} alt=\"\" />\n          </Link>\n\n          <div className=\"info\">\n            {/*<Link className=\"author\" to={`/@${article.author.username}`}>*/}\n            {/*{article.author.username}*/}\n            {/*</Link>*/}\n            <Link\n              className={\"author\"}\n              view={views.profile}\n              params={{ username: article.author.username }}\n              store={this.props.store}\n              key={article.author.image}\n            >\n              {article.author.username}\n            </Link>\n            <span className=\"date\">\n              {new Date(article.createdAt).toDateString()}\n            </span>\n          </div>\n\n          <div className=\"pull-xs-right\">\n            <button\n              className={favoriteButtonClass}\n              onClick={this.handleClickFavorite}\n            >\n              <i className=\"ion-heart\" /> {article.favoritesCount}\n            </button>\n          </div>\n        </div>\n\n        {/*<Link to={`/article/${article.slug}`} className=\"preview-link\">*/}\n          {/*<h1>{article.title}</h1>*/}\n          {/*<p>{article.description}</p>*/}\n          {/*<span>Read more...</span>*/}\n          {/*<ul className=\"tag-list\">*/}\n            {/*{article.tagList.map(tag => {*/}\n              {/*return (*/}\n                {/*<li className=\"tag-default tag-pill tag-outline\" key={tag}>*/}\n                  {/*{tag}*/}\n                {/*</li>*/}\n              {/*);*/}\n            {/*})}*/}\n          {/*</ul>*/}\n        {/*</Link>*/}\n        <Link\n          className={\"preview-link\"}\n          style={{\n            display: 'block',\n            overflow: 'auto',\n            zoom: 1\n          }}\n          view={views.article}\n          params={{ id: article.slug }}\n          store={this.props.store}\n          key={article.slug}\n        >\n          <h1>{article.title}</h1>\n          <p>{article.description}</p>\n          <span>Read more...</span>\n          <ul className=\"tag-list\">\n            {article.tagList.map(tag => {\n              return (\n                <li className=\"tag-default tag-pill tag-outline\" key={tag}>\n                  {tag}\n                </li>\n              );\n            })}\n          </ul>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default ArticlePreview;\n","import { PureComponent, createElement } from 'react';\nimport { array, arrayOf, func, number, object, oneOf, oneOfType, string } from 'prop-types';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar ALIGNMENT;\n\n(function (ALIGNMENT) {\n  ALIGNMENT[\"AUTO\"] = \"auto\";\n  ALIGNMENT[\"START\"] = \"start\";\n  ALIGNMENT[\"CENTER\"] = \"center\";\n  ALIGNMENT[\"END\"] = \"end\";\n})(ALIGNMENT || (ALIGNMENT = {}));\n\nvar DIRECTION;\n\n(function (DIRECTION) {\n  DIRECTION[\"HORIZONTAL\"] = \"horizontal\";\n  DIRECTION[\"VERTICAL\"] = \"vertical\";\n})(DIRECTION || (DIRECTION = {}));\n\nvar SCROLL_CHANGE_REASON;\n\n(function (SCROLL_CHANGE_REASON) {\n  SCROLL_CHANGE_REASON[\"OBSERVED\"] = \"observed\";\n  SCROLL_CHANGE_REASON[\"REQUESTED\"] = \"requested\";\n})(SCROLL_CHANGE_REASON || (SCROLL_CHANGE_REASON = {}));\n\nvar scrollProp = (_a = {}, _a[DIRECTION.VERTICAL] = 'scrollTop', _a[DIRECTION.HORIZONTAL] = 'scrollLeft', _a);\nvar sizeProp = (_b = {}, _b[DIRECTION.VERTICAL] = 'height', _b[DIRECTION.HORIZONTAL] = 'width', _b);\nvar positionProp = (_c = {}, _c[DIRECTION.VERTICAL] = 'top', _c[DIRECTION.HORIZONTAL] = 'left', _c);\nvar marginProp = (_d = {}, _d[DIRECTION.VERTICAL] = 'marginTop', _d[DIRECTION.HORIZONTAL] = 'marginLeft', _d);\nvar oppositeMarginProp = (_e = {}, _e[DIRECTION.VERTICAL] = 'marginBottom', _e[DIRECTION.HORIZONTAL] = 'marginRight', _e);\n\nvar _a;\n\nvar _b;\n\nvar _c;\n\nvar _d;\n\nvar _e;\n/* Forked from react-virtualized 💖 */\n\n\nvar SizeAndPositionManager =\n/** @class */\nfunction () {\n  function SizeAndPositionManager(_a) {\n    var itemCount = _a.itemCount,\n        itemSizeGetter = _a.itemSizeGetter,\n        estimatedItemSize = _a.estimatedItemSize;\n    this.itemSizeGetter = itemSizeGetter;\n    this.itemCount = itemCount;\n    this.estimatedItemSize = estimatedItemSize; // Cache of size and position data for items, mapped by item index.\n\n    this.itemSizeAndPositionData = {}; // Measurements for items up to this index can be trusted; items afterward should be estimated.\n\n    this.lastMeasuredIndex = -1;\n  }\n\n  SizeAndPositionManager.prototype.updateConfig = function (_a) {\n    var itemCount = _a.itemCount,\n        itemSizeGetter = _a.itemSizeGetter,\n        estimatedItemSize = _a.estimatedItemSize;\n\n    if (itemCount != null) {\n      this.itemCount = itemCount;\n    }\n\n    if (estimatedItemSize != null) {\n      this.estimatedItemSize = estimatedItemSize;\n    }\n\n    if (itemSizeGetter != null) {\n      this.itemSizeGetter = itemSizeGetter;\n    }\n  };\n\n  SizeAndPositionManager.prototype.getLastMeasuredIndex = function () {\n    return this.lastMeasuredIndex;\n  };\n  /**\n   * This method returns the size and position for the item at the specified index.\n   * It just-in-time calculates (or used cached values) for items leading up to the index.\n   */\n\n\n  SizeAndPositionManager.prototype.getSizeAndPositionForIndex = function (index) {\n    if (index < 0 || index >= this.itemCount) {\n      throw Error(\"Requested index \" + index + \" is outside of range 0..\" + this.itemCount);\n    }\n\n    if (index > this.lastMeasuredIndex) {\n      var lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n      var offset = lastMeasuredSizeAndPosition.offset + lastMeasuredSizeAndPosition.size;\n\n      for (var i = this.lastMeasuredIndex + 1; i <= index; i++) {\n        var size = this.itemSizeGetter(i);\n\n        if (size == null || isNaN(size)) {\n          throw Error(\"Invalid size returned for index \" + i + \" of value \" + size);\n        }\n\n        this.itemSizeAndPositionData[i] = {\n          offset: offset,\n          size: size\n        };\n        offset += size;\n      }\n\n      this.lastMeasuredIndex = index;\n    }\n\n    return this.itemSizeAndPositionData[index];\n  };\n\n  SizeAndPositionManager.prototype.getSizeAndPositionOfLastMeasuredItem = function () {\n    return this.lastMeasuredIndex >= 0 ? this.itemSizeAndPositionData[this.lastMeasuredIndex] : {\n      offset: 0,\n      size: 0\n    };\n  };\n  /**\n   * Total size of all items being measured.\n   * This value will be completedly estimated initially.\n   * As items as measured the estimate will be updated.\n   */\n\n\n  SizeAndPositionManager.prototype.getTotalSize = function () {\n    var lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n    return lastMeasuredSizeAndPosition.offset + lastMeasuredSizeAndPosition.size + (this.itemCount - this.lastMeasuredIndex - 1) * this.estimatedItemSize;\n  };\n  /**\n   * Determines a new offset that ensures a certain item is visible, given the alignment.\n   *\n   * @param align Desired alignment within container; one of \"start\" (default), \"center\", or \"end\"\n   * @param containerSize Size (width or height) of the container viewport\n   * @return Offset to use to ensure the specified item is visible\n   */\n\n\n  SizeAndPositionManager.prototype.getUpdatedOffsetForIndex = function (_a) {\n    var _b = _a.align,\n        align = _b === void 0 ? ALIGNMENT.START : _b,\n        containerSize = _a.containerSize,\n        currentOffset = _a.currentOffset,\n        targetIndex = _a.targetIndex;\n\n    if (containerSize <= 0) {\n      return 0;\n    }\n\n    var datum = this.getSizeAndPositionForIndex(targetIndex);\n    var maxOffset = datum.offset;\n    var minOffset = maxOffset - containerSize + datum.size;\n    var idealOffset;\n\n    switch (align) {\n      case ALIGNMENT.END:\n        idealOffset = minOffset;\n        break;\n\n      case ALIGNMENT.CENTER:\n        idealOffset = maxOffset - (containerSize - datum.size) / 2;\n        break;\n\n      case ALIGNMENT.START:\n        idealOffset = maxOffset;\n        break;\n\n      default:\n        idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n    }\n\n    var totalSize = this.getTotalSize();\n    return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n  };\n\n  SizeAndPositionManager.prototype.getVisibleRange = function (_a) {\n    var containerSize = _a.containerSize,\n        offset = _a.offset,\n        overscanCount = _a.overscanCount;\n    var totalSize = this.getTotalSize();\n\n    if (totalSize === 0) {\n      return {};\n    }\n\n    var maxOffset = offset + containerSize;\n    var start = this.findNearestItem(offset);\n\n    if (typeof start === 'undefined') {\n      throw Error(\"Invalid offset \" + offset + \" specified\");\n    }\n\n    var datum = this.getSizeAndPositionForIndex(start);\n    offset = datum.offset + datum.size;\n    var stop = start;\n\n    while (offset < maxOffset && stop < this.itemCount - 1) {\n      stop++;\n      offset += this.getSizeAndPositionForIndex(stop).size;\n    }\n\n    if (overscanCount) {\n      start = Math.max(0, start - overscanCount);\n      stop = Math.min(stop + overscanCount, this.itemCount - 1);\n    }\n\n    return {\n      start: start,\n      stop: stop\n    };\n  };\n  /**\n   * Clear all cached values for items after the specified index.\n   * This method should be called for any item that has changed its size.\n   * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionForIndex() is called.\n   */\n\n\n  SizeAndPositionManager.prototype.resetItem = function (index) {\n    this.lastMeasuredIndex = Math.min(this.lastMeasuredIndex, index - 1);\n  };\n  /**\n   * Searches for the item (index) nearest the specified offset.\n   *\n   * If no exact match is found the next lowest item index will be returned.\n   * This allows partially visible items (with offsets just before/above the fold) to be visible.\n   */\n\n\n  SizeAndPositionManager.prototype.findNearestItem = function (offset) {\n    if (isNaN(offset)) {\n      throw Error(\"Invalid offset \" + offset + \" specified\");\n    } // Our search algorithms find the nearest match at or below the specified offset.\n    // So make sure the offset is at least 0 or no match will be found.\n\n\n    offset = Math.max(0, offset);\n    var lastMeasuredSizeAndPosition = this.getSizeAndPositionOfLastMeasuredItem();\n    var lastMeasuredIndex = Math.max(0, this.lastMeasuredIndex);\n\n    if (lastMeasuredSizeAndPosition.offset >= offset) {\n      // If we've already measured items within this range just use a binary search as it's faster.\n      return this.binarySearch({\n        high: lastMeasuredIndex,\n        low: 0,\n        offset: offset\n      });\n    } else {\n      // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n      // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n      // The overall complexity for this approach is O(log n).\n      return this.exponentialSearch({\n        index: lastMeasuredIndex,\n        offset: offset\n      });\n    }\n  };\n\n  SizeAndPositionManager.prototype.binarySearch = function (_a) {\n    var low = _a.low,\n        high = _a.high,\n        offset = _a.offset;\n    var middle = 0;\n    var currentOffset = 0;\n\n    while (low <= high) {\n      middle = low + Math.floor((high - low) / 2);\n      currentOffset = this.getSizeAndPositionForIndex(middle).offset;\n\n      if (currentOffset === offset) {\n        return middle;\n      } else if (currentOffset < offset) {\n        low = middle + 1;\n      } else if (currentOffset > offset) {\n        high = middle - 1;\n      }\n    }\n\n    if (low > 0) {\n      return low - 1;\n    }\n\n    return 0;\n  };\n\n  SizeAndPositionManager.prototype.exponentialSearch = function (_a) {\n    var index = _a.index,\n        offset = _a.offset;\n    var interval = 1;\n\n    while (index < this.itemCount && this.getSizeAndPositionForIndex(index).offset < offset) {\n      index += interval;\n      interval *= 2;\n    }\n\n    return this.binarySearch({\n      high: Math.min(index, this.itemCount - 1),\n      low: Math.floor(index / 2),\n      offset: offset\n    });\n  };\n\n  return SizeAndPositionManager;\n}();\n\nvar STYLE_WRAPPER = {\n  overflow: 'auto',\n  willChange: 'transform',\n  WebkitOverflowScrolling: 'touch'\n};\nvar STYLE_INNER = {\n  position: 'relative',\n  width: '100%',\n  minHeight: '100%'\n};\nvar STYLE_ITEM = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%'\n};\n\nvar STYLE_STICKY_ITEM = _assign({}, STYLE_ITEM, {\n  position: 'sticky'\n});\n\nvar VirtualList =\n/** @class */\nfunction (_super) {\n  __extends(VirtualList, _super);\n\n  function VirtualList() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.itemSizeGetter = function (itemSize) {\n      return function (index) {\n        return _this.getSize(index, itemSize);\n      };\n    };\n\n    _this.sizeAndPositionManager = new SizeAndPositionManager({\n      itemCount: _this.props.itemCount,\n      itemSizeGetter: _this.itemSizeGetter(_this.props.itemSize),\n      estimatedItemSize: _this.getEstimatedItemSize()\n    });\n    _this.state = {\n      offset: _this.props.scrollOffset || _this.props.scrollToIndex != null && _this.getOffsetForIndex(_this.props.scrollToIndex) || 0,\n      scrollChangeReason: SCROLL_CHANGE_REASON.REQUESTED\n    };\n    _this.styleCache = {};\n\n    _this.getRef = function (node) {\n      _this.rootNode = node;\n    };\n\n    _this.handleScroll = function (event) {\n      var onScroll = _this.props.onScroll;\n\n      var offset = _this.getNodeOffset();\n\n      if (offset < 0 || _this.state.offset === offset || event.target !== _this.rootNode) {\n        return;\n      }\n\n      _this.setState({\n        offset: offset,\n        scrollChangeReason: SCROLL_CHANGE_REASON.OBSERVED\n      });\n\n      if (typeof onScroll === 'function') {\n        onScroll(offset, event);\n      }\n    };\n\n    return _this;\n  }\n\n  VirtualList.prototype.componentDidMount = function () {\n    var _a = this.props,\n        scrollOffset = _a.scrollOffset,\n        scrollToIndex = _a.scrollToIndex;\n    this.rootNode.addEventListener('scroll', this.handleScroll, {\n      passive: true\n    });\n\n    if (scrollOffset != null) {\n      this.scrollTo(scrollOffset);\n    } else if (scrollToIndex != null) {\n      this.scrollTo(this.getOffsetForIndex(scrollToIndex));\n    }\n  };\n\n  VirtualList.prototype.componentWillReceiveProps = function (nextProps) {\n    var _a = this.props,\n        estimatedItemSize = _a.estimatedItemSize,\n        itemCount = _a.itemCount,\n        itemSize = _a.itemSize,\n        scrollOffset = _a.scrollOffset,\n        scrollToAlignment = _a.scrollToAlignment,\n        scrollToIndex = _a.scrollToIndex;\n    var scrollPropsHaveChanged = nextProps.scrollToIndex !== scrollToIndex || nextProps.scrollToAlignment !== scrollToAlignment;\n    var itemPropsHaveChanged = nextProps.itemCount !== itemCount || nextProps.itemSize !== itemSize || nextProps.estimatedItemSize !== estimatedItemSize;\n\n    if (nextProps.itemSize !== itemSize) {\n      this.sizeAndPositionManager.updateConfig({\n        itemSizeGetter: this.itemSizeGetter(nextProps.itemSize)\n      });\n    }\n\n    if (nextProps.itemCount !== itemCount || nextProps.estimatedItemSize !== estimatedItemSize) {\n      this.sizeAndPositionManager.updateConfig({\n        itemCount: nextProps.itemCount,\n        estimatedItemSize: this.getEstimatedItemSize(nextProps)\n      });\n    }\n\n    if (itemPropsHaveChanged) {\n      this.recomputeSizes();\n    }\n\n    if (nextProps.scrollOffset !== scrollOffset) {\n      this.setState({\n        offset: nextProps.scrollOffset || 0,\n        scrollChangeReason: SCROLL_CHANGE_REASON.REQUESTED\n      });\n    } else if (typeof nextProps.scrollToIndex === 'number' && (scrollPropsHaveChanged || itemPropsHaveChanged)) {\n      this.setState({\n        offset: this.getOffsetForIndex(nextProps.scrollToIndex, nextProps.scrollToAlignment, nextProps.itemCount),\n        scrollChangeReason: SCROLL_CHANGE_REASON.REQUESTED\n      });\n    }\n  };\n\n  VirtualList.prototype.componentDidUpdate = function (_, prevState) {\n    var _a = this.state,\n        offset = _a.offset,\n        scrollChangeReason = _a.scrollChangeReason;\n\n    if (prevState.offset !== offset && scrollChangeReason === SCROLL_CHANGE_REASON.REQUESTED) {\n      this.scrollTo(offset);\n    }\n  };\n\n  VirtualList.prototype.componentWillUnmount = function () {\n    this.rootNode.removeEventListener('scroll', this.handleScroll);\n  };\n\n  VirtualList.prototype.scrollTo = function (value) {\n    var _a = this.props.scrollDirection,\n        scrollDirection = _a === void 0 ? DIRECTION.VERTICAL : _a;\n    this.rootNode[scrollProp[scrollDirection]] = value;\n  };\n\n  VirtualList.prototype.getOffsetForIndex = function (index, scrollToAlignment, itemCount) {\n    if (scrollToAlignment === void 0) {\n      scrollToAlignment = this.props.scrollToAlignment;\n    }\n\n    if (itemCount === void 0) {\n      itemCount = this.props.itemCount;\n    }\n\n    var _a = this.props.scrollDirection,\n        scrollDirection = _a === void 0 ? DIRECTION.VERTICAL : _a;\n\n    if (index < 0 || index >= itemCount) {\n      index = 0;\n    }\n\n    return this.sizeAndPositionManager.getUpdatedOffsetForIndex({\n      align: scrollToAlignment,\n      containerSize: this.props[sizeProp[scrollDirection]],\n      currentOffset: this.state && this.state.offset || 0,\n      targetIndex: index\n    });\n  };\n\n  VirtualList.prototype.recomputeSizes = function (startIndex) {\n    if (startIndex === void 0) {\n      startIndex = 0;\n    }\n\n    this.styleCache = {};\n    this.sizeAndPositionManager.resetItem(startIndex);\n  };\n\n  VirtualList.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        estimatedItemSize = _a.estimatedItemSize,\n        height = _a.height,\n        _b = _a.overscanCount,\n        overscanCount = _b === void 0 ? 3 : _b,\n        renderItem = _a.renderItem,\n        itemCount = _a.itemCount,\n        itemSize = _a.itemSize,\n        onItemsRendered = _a.onItemsRendered,\n        onScroll = _a.onScroll,\n        _c = _a.scrollDirection,\n        scrollDirection = _c === void 0 ? DIRECTION.VERTICAL : _c,\n        scrollOffset = _a.scrollOffset,\n        scrollToIndex = _a.scrollToIndex,\n        scrollToAlignment = _a.scrollToAlignment,\n        stickyIndices = _a.stickyIndices,\n        style = _a.style,\n        width = _a.width,\n        props = __rest(_a, [\"estimatedItemSize\", \"height\", \"overscanCount\", \"renderItem\", \"itemCount\", \"itemSize\", \"onItemsRendered\", \"onScroll\", \"scrollDirection\", \"scrollOffset\", \"scrollToIndex\", \"scrollToAlignment\", \"stickyIndices\", \"style\", \"width\"]);\n\n    var offset = this.state.offset;\n\n    var _d = this.sizeAndPositionManager.getVisibleRange({\n      containerSize: this.props[sizeProp[scrollDirection]] || 0,\n      offset: offset,\n      overscanCount: overscanCount\n    }),\n        start = _d.start,\n        stop = _d.stop;\n\n    var items = [];\n\n    var wrapperStyle = _assign({}, STYLE_WRAPPER, style, {\n      height: height,\n      width: width\n    });\n\n    var innerStyle = _assign({}, STYLE_INNER, (_e = {}, _e[sizeProp[scrollDirection]] = this.sizeAndPositionManager.getTotalSize(), _e));\n\n    if (stickyIndices != null && stickyIndices.length !== 0) {\n      stickyIndices.forEach(function (index) {\n        return items.push(renderItem({\n          index: index,\n          style: _this.getStyle(index, true)\n        }));\n      });\n\n      if (scrollDirection === DIRECTION.HORIZONTAL) {\n        innerStyle.display = 'flex';\n      }\n    }\n\n    if (typeof start !== 'undefined' && typeof stop !== 'undefined') {\n      for (var index = start; index <= stop; index++) {\n        if (stickyIndices != null && stickyIndices.includes(index)) {\n          continue;\n        }\n\n        items.push(renderItem({\n          index: index,\n          style: this.getStyle(index, false)\n        }));\n      }\n\n      if (typeof onItemsRendered === 'function') {\n        onItemsRendered({\n          startIndex: start,\n          stopIndex: stop\n        });\n      }\n    }\n\n    return createElement(\"div\", _assign({\n      ref: this.getRef\n    }, props, {\n      style: wrapperStyle\n    }), createElement(\"div\", {\n      style: innerStyle\n    }, items));\n\n    var _e;\n  };\n\n  VirtualList.prototype.getNodeOffset = function () {\n    var _a = this.props.scrollDirection,\n        scrollDirection = _a === void 0 ? DIRECTION.VERTICAL : _a;\n    return this.rootNode[scrollProp[scrollDirection]];\n  };\n\n  VirtualList.prototype.getEstimatedItemSize = function (props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    return props.estimatedItemSize || typeof props.itemSize === 'number' && props.itemSize || 50;\n  };\n\n  VirtualList.prototype.getSize = function (index, itemSize) {\n    if (typeof itemSize === 'function') {\n      return itemSize(index);\n    }\n\n    return Array.isArray(itemSize) ? itemSize[index] : itemSize;\n  };\n\n  VirtualList.prototype.getStyle = function (index, sticky) {\n    var style = this.styleCache[index];\n\n    if (style) {\n      return style;\n    }\n\n    var _a = this.props.scrollDirection,\n        scrollDirection = _a === void 0 ? DIRECTION.VERTICAL : _a;\n\n    var _b = this.sizeAndPositionManager.getSizeAndPositionForIndex(index),\n        size = _b.size,\n        offset = _b.offset;\n\n    return this.styleCache[index] = sticky ? _assign({}, STYLE_STICKY_ITEM, (_c = {}, _c[sizeProp[scrollDirection]] = size, _c[marginProp[scrollDirection]] = offset, _c[oppositeMarginProp[scrollDirection]] = -(offset + size), _c.zIndex = 1, _c)) : _assign({}, STYLE_ITEM, (_d = {}, _d[sizeProp[scrollDirection]] = size, _d[positionProp[scrollDirection]] = offset, _d));\n\n    var _c, _d;\n  };\n\n  VirtualList.defaultProps = {\n    overscanCount: 3,\n    scrollDirection: DIRECTION.VERTICAL,\n    width: '100%'\n  };\n  VirtualList.propTypes = {\n    estimatedItemSize: number,\n    height: oneOfType([number, string]).isRequired,\n    itemCount: number.isRequired,\n    itemSize: oneOfType([number, array, func]).isRequired,\n    onScroll: func,\n    onItemsRendered: func,\n    overscanCount: number,\n    renderItem: func.isRequired,\n    scrollOffset: number,\n    scrollToIndex: number,\n    scrollToAlignment: oneOf([ALIGNMENT.AUTO, ALIGNMENT.START, ALIGNMENT.CENTER, ALIGNMENT.END]),\n    scrollDirection: oneOf([DIRECTION.HORIZONTAL, DIRECTION.VERTICAL]),\n    stickyIndices: arrayOf(number),\n    style: object,\n    width: oneOfType([number, string])\n  };\n  return VirtualList;\n}(PureComponent);\n\nexport { DIRECTION as ScrollDirection };\nexport default VirtualList;","import ArticlePreview from \"./ArticlePreview\";\n// import ListPagination from \"./ListPagination\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport React from \"react\";\nimport VirtualList from \"react-tiny-virtual-list\";\n\nconst ArticleList = props => {\n  if (props.loading && props.articles.length === 0) {\n    return <LoadingSpinner />;\n  }\n\n  if (props.articles.length === 0) {\n    return <div className=\"article-preview\">No articles are here... yet.</div>;\n  }\n\n  return (\n    <>\n      {/*{props.articles.map(article => {*/}\n      {/*return <ArticlePreview article={article} key={article.slug} />;*/}\n      {/*})}*/}\n\n      <VirtualList\n        height={600}\n        itemCount={props.articles.length}\n        itemSize={200}\n        renderItem={({ index, style }) => {\n          return props.articles[index] !== null ? (\n            <div style={style} key={index}>\n              <ArticlePreview article={props.articles[index]} key={index} />\n            </div>\n          ) : (\n            <div key={index}>Loading …</div>\n          );\n        }}\n        onItemsRendered={({ startIndex, stopIndex }) => {\n          // load nextPage\n          if (\n            !props.isLoading &&\n            stopIndex - props.currentPage * 10 > 5 &&\n            props.currentPage < props.totalPagesCount\n          ) {\n            props.onSetPage(props.currentPage + 1);\n          }\n        }}\n      />\n\n      {/*<ListPagination*/}\n      {/*onSetPage={props.onSetPage}*/}\n      {/*totalPagesCount={props.totalPagesCount}*/}\n      {/*currentPage={props.currentPage}*/}\n      {/*/>*/}\n    </>\n  );\n};\n\nexport default ArticleList;\n"],"sourceRoot":""}