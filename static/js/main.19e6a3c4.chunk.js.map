{"version":3,"sources":["config/views.js","stores/commonStore.js","serviceWorker.js","stores/articlesStore.js","stores/commentsStore.js","stores/editorStore.js","stores/profileStore.js","stores/index.js","components/Header.js","components/App.js","index.js","stores/userStore.js","agent.js","stores/authStore.js"],"names":["Loading","props","pastDelay","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","style","display","width","height","justifyContent","alignItems","error","Loadable","opts","L","Object","_Users_SixCup_GitHub_COLD_react_mobx_router_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","render","loaded","Component","default","loading","AsyncArticle","loader","Promise","all","__webpack_require__","e","then","bind","AsyncEditor","AsyncHome","AsyncLogin","AsyncProfile","AsyncRegister","AsyncSettings","views","login","Route","path","component","register","editor","article","settings","profile","home","onParamsChange","route","params","store","queryParams","articlesStore","setPredicate","getPredicate","loadArticles","CommonStore","_this","this","_Users_SixCup_GitHub_COLD_react_mobx_router_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_SixCup_GitHub_COLD_react_mobx_router_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_initializerDefineProperty__WEBPACK_IMPORTED_MODULE_0__","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","reaction","token","window","localStorage","setItem","removeItem","_this2","isLoadingTags","agent","Tags","getAll","action","_ref","tags","map","t","toLowerCase","finally","appLoaded","observable","getItem","__webpack_exports__","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","_class","ArticlesStore","classCallCheck","initializerDefineProperty","createClass","key","value","articlesRegistry","clear","page","slug","get","predicate","JSON","stringify","myFeed","Articles","feed","favoritedBy","tag","byTag","author","byAuthor","isLoading","$req","articles","articlesCount","forEach","set","totalPagesCount","Math","ceil","_ref2$acceptCached","arguments","length","undefined","acceptCached","getArticle","resolve","_ref3","favorited","favoritesCount","favorite","err","unfavorite","_this3","create","_ref4","data","_this4","update","_ref5","_this5","delete","del","defaultValue","_store$router","router","tab","getParams","values","applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","commentsStore","commentsStore_class","CommentsStore","commentsStore_descriptor","commentsStore_descriptor2","commentsStore_descriptor3","commentsStore_descriptor4","commentsStore_descriptor5","articleSlug","comments","isLoadingComments","commentErrors","Comments","forArticle","response","body","errors","comment","isCreatingComment","loadComments","id","idx","findIndex","c","splice","editorStore","reset","inProgress","loadArticle","Error","title","description","tagList","includes","push","filter","updateArticle","createArticle","profileStore","username","isLoadingProfile","Profile","following","follow","unfollow","stores","authStore","commonStore","userStore","RouterStore","LoggedOutView","currentUser","react_default","className","dist","view","LoggedInView","concat","src","image","alt","Header","inject","observer","maxWidth","margin","overflow","zIndex","appName","Header_LoggedOutView","Header_LoggedInView","React","App","setAppLoaded","pullUser","components_Header","startRouter","promiseFinally","shim","useStrict","ReactDOM","index_module","assign","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","UserStore","loadingUser","Auth","current","user","newUser","updatingUser","save","_ref2","global","superagent_promise__WEBPACK_IMPORTED_MODULE_0__","superagent_promise__WEBPACK_IMPORTED_MODULE_0___default","n","superagent__WEBPACK_IMPORTED_MODULE_1__","superagent__WEBPACK_IMPORTED_MODULE_1___default","_stores_commonStore__WEBPACK_IMPORTED_MODULE_2__","_stores_authStore__WEBPACK_IMPORTED_MODULE_3__","superagent","superagentPromise","_superagent","API_ROOT","encode","encodeURIComponent","handleErrors","logout","responseBody","res","tokenPlugin","req","requests","url","use","end","put","post","email","password","limit","count","p","omitSlug","lim","query","commentId","AuthStore","setToken","forgetUser"],"mappings":"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","file":"static/js/main.19e6a3c4.chunk.js","sourcesContent":["import React from \"react\";\nimport L from \"react-loadable\";\n\n//models\nimport { Route } from \"mobx-router\";\n\n//components\n// Loading Component\nconst Loading = props =>\n  props.pastDelay ? (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"100vh\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      Loading...\n    </div>\n  ) : props.error ? (\n    <div>Error!</div>\n  ) : null;\n\nconst Loadable = opts =>\n  L({\n    render(loaded, props) {\n      const Component = loaded.default;\n      return <Component {...props} />;\n    },\n    loading: Loading,\n    ...opts\n  });\n\nconst AsyncArticle = Loadable({\n  loader: () => import(\"../components/Article\")\n});\n\nconst AsyncEditor = Loadable({\n  loader: () => import(\"../components/Editor\")\n});\n\nconst AsyncHome = Loadable({\n  loader: () => import(\"../components/Home\")\n});\n\nconst AsyncLogin = Loadable({\n  loader: () => import(\"../components/Login\")\n});\n\nconst AsyncProfile = Loadable({\n  loader: () => import(\"../components/Profile\")\n});\n\nconst AsyncRegister = Loadable({\n  loader: () => import(\"../components/Register\")\n});\n\nconst AsyncSettings = Loadable({\n  loader: () => import(\"../components/Settings\")\n});\n\nconst views = {\n  login: new Route({\n    path: \"/login\",\n    component: <AsyncLogin />\n  }),\n  register: new Route({\n    path: \"/register\",\n    component: <AsyncRegister />\n  }),\n  editor: new Route({\n    path: \"/editor/:slug?\",\n    component: <AsyncEditor />\n  }),\n  article: new Route({\n    path: \"/article/:id\",\n    component: <AsyncArticle />\n  }),\n  settings: new Route({\n    path: \"/settings\",\n    component: <AsyncSettings />\n  }),\n  profile: new Route({\n    path: \"/:username/:fav\",\n    component: <AsyncProfile />\n  }),\n  home: new Route({\n    path: \"/\",\n    component: <AsyncHome />,\n    onParamsChange: (route, params, store, queryParams) => {\n      store.articlesStore.setPredicate(\n        store.articlesStore.getPredicate({\n          store\n        })\n      );\n      store.articlesStore.loadArticles();\n    }\n  })\n};\nexport default views;\n","import { observable, action, reaction } from \"mobx\";\nimport agent from \"../agent\";\n\nclass CommonStore {\n  @observable appName = \"Conduit\";\n  @observable token = window.localStorage.getItem(\"jwt\");\n  @observable appLoaded = false;\n\n  @observable tags = [];\n  @observable isLoadingTags = false;\n\n  constructor() {\n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem(\"jwt\", token);\n        } else {\n          window.localStorage.removeItem(\"jwt\");\n        }\n      }\n    );\n  }\n\n  @action loadTags() {\n    this.isLoadingTags = true;\n    return agent.Tags.getAll()\n      .then(\n        action(({ tags }) => {\n          this.tags = tags.map(t => t.toLowerCase());\n        })\n      )\n      .finally(\n        action(() => {\n          this.isLoadingTags = false;\n        })\n      );\n  }\n\n  @action setToken(token) {\n    this.token = token;\n  }\n\n  @action setAppLoaded() {\n    this.appLoaded = true;\n  }\n}\n\nexport default new CommonStore();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action, computed } from \"mobx\";\nimport agent from \"../agent\";\n\nconst LIMIT = 10;\n\nexport class ArticlesStore {\n  @observable isLoading = false;\n  @observable page = 0;\n  @observable totalPagesCount = 0;\n  @observable articlesRegistry = observable.map();\n  @observable predicate = {};\n\n  @computed get articles() {\n    return this.articlesRegistry.values();\n  }\n\n  clear() {\n    this.articlesRegistry.clear();\n    this.page = 0;\n  }\n\n  getArticle(slug) {\n    return this.articlesRegistry.get(slug);\n  }\n\n  @action setPage(page) {\n    this.page = page;\n  }\n\n  @action setPredicate(predicate) {\n    if (JSON.stringify(predicate) === JSON.stringify(this.predicate)) return;\n    this.clear();\n    this.predicate = predicate;\n  }\n\n  $req() {\n    if (this.predicate.myFeed) return agent.Articles.feed(this.page, LIMIT);\n    if (this.predicate.favoritedBy)\n      return agent.Articles.favoritedBy(\n        this.predicate.favoritedBy,\n        this.page,\n        LIMIT\n      );\n    if (this.predicate.tag)\n      return agent.Articles.byTag(this.predicate.tag, this.page, LIMIT);\n    if (this.predicate.author)\n      return agent.Articles.byAuthor(this.predicate.author, this.page, LIMIT);\n    return agent.Articles.all(this.page, LIMIT, this.predicate);\n  }\n\n  @action loadArticles() {\n    this.isLoading = true;\n    return this.$req()\n      .then(\n        action(({ articles, articlesCount }) => {\n          // this.articlesRegistry.clear();\n          articles.forEach(article =>\n            this.articlesRegistry.set(article.slug, article)\n          );\n          this.totalPagesCount = Math.ceil(articlesCount / LIMIT);\n        })\n      )\n      .finally(\n        action(() => {\n          this.isLoading = false;\n        })\n      );\n  }\n\n  @action loadArticle(slug, { acceptCached = false } = {}) {\n    if (acceptCached) {\n      const article = this.getArticle(slug);\n      if (article) return Promise.resolve(article);\n    }\n    this.isLoading = true;\n    return agent.Articles.get(slug)\n      .then(\n        action(({ article }) => {\n          this.articlesRegistry.set(article.slug, article);\n          return article;\n        })\n      )\n      .finally(\n        action(() => {\n          this.isLoading = false;\n        })\n      );\n  }\n\n  @action makeFavorite(slug) {\n    const article = this.getArticle(slug);\n    if (article && !article.favorited) {\n      article.favorited = true;\n      article.favoritesCount++;\n      return agent.Articles.favorite(slug).catch(\n        action(err => {\n          article.favorited = false;\n          article.favoritesCount--;\n          throw err;\n        })\n      );\n    }\n    return Promise.resolve();\n  }\n\n  @action unmakeFavorite(slug) {\n    const article = this.getArticle(slug);\n    if (article && article.favorited) {\n      article.favorited = false;\n      article.favoritesCount--;\n      return agent.Articles.unfavorite(slug).catch(\n        action(err => {\n          article.favorited = true;\n          article.favoritesCount++;\n          throw err;\n        })\n      );\n    }\n    return Promise.resolve();\n  }\n\n  @action createArticle(article) {\n    return agent.Articles.create(article).then(({ article }) => {\n      this.articlesRegistry.set(article.slug, article);\n      return article;\n    });\n  }\n\n  @action updateArticle(data) {\n    return agent.Articles.update(data).then(({ article }) => {\n      this.articlesRegistry.set(article.slug, article);\n      return article;\n    });\n  }\n\n  @action deleteArticle(slug) {\n    this.articlesRegistry.delete(slug);\n    return agent.Articles.del(slug).catch(\n      action(err => {\n        this.loadArticles();\n        throw err;\n      })\n    );\n  }\n\n  @action\n  getParams(props, key, defaultValue) {\n    const { store } = props;\n    const {\n      router: { queryParams, params }\n    } = store;\n    return (\n      (params && params[key]) ||\n      (queryParams && queryParams[key]) ||\n      defaultValue\n    );\n  }\n\n  @action\n  getPredicate(props) {\n    const tab = this.getParams(props, \"tab\", \"all\");\n    const tag = this.getParams(props, \"tag\", \"\");\n\n    switch (tab) {\n      case \"feed\":\n        return { myFeed: true };\n      case \"tag\":\n        return { tag };\n      default:\n        return {};\n    }\n  }\n}\n\nexport default new ArticlesStore();\n","import { observable, action } from \"mobx\";\nimport agent from \"../agent\";\n\nexport class CommentsStore {\n  @observable isCreatingComment = false;\n  @observable isLoadingComments = false;\n  @observable commentErrors = undefined;\n  @observable articleSlug = undefined;\n  @observable comments = [];\n\n  @action setArticleSlug(articleSlug) {\n    if (this.articleSlug !== articleSlug) {\n      this.comments = [];\n      this.articleSlug = articleSlug;\n    }\n  }\n\n  @action loadComments() {\n    this.isLoadingComments = true;\n    this.commentErrors = undefined;\n    return agent.Comments.forArticle(this.articleSlug)\n      .then(\n        action(({ comments }) => {\n          this.comments = comments;\n        })\n      )\n      .catch(\n        action(err => {\n          this.commentErrors =\n            err.response && err.response.body && err.response.body.errors;\n          throw err;\n        })\n      )\n      .finally(\n        action(() => {\n          this.isLoadingComments = false;\n        })\n      );\n  }\n\n  @action createComment(comment) {\n    this.isCreatingComment = true;\n    return agent.Comments.create(this.articleSlug, comment)\n      .then(() => this.loadComments())\n      .finally(\n        action(() => {\n          this.isCreatingComment = false;\n        })\n      );\n  }\n\n  @action deleteComment(id) {\n    const idx = this.comments.findIndex(c => c.id === id);\n    if (idx > -1) this.comments.splice(idx, 1);\n    return agent.Comments.delete(this.articleSlug, id).catch(\n      action(err => {\n        this.loadComments();\n        throw err;\n      })\n    );\n  }\n}\n\nexport default new CommentsStore();\n","import { observable, action } from \"mobx\";\nimport articlesStore from \"./articlesStore\";\n\nclass EditorStore {\n  @observable inProgress = false;\n  @observable errors = undefined;\n  @observable articleSlug = undefined;\n\n  @observable title = \"\";\n  @observable description = \"\";\n  @observable body = \"\";\n  @observable tagList = [];\n\n  @action setArticleSlug(articleSlug) {\n    if (this.articleSlug !== articleSlug) {\n      this.reset();\n      this.articleSlug = articleSlug;\n    }\n  }\n\n  @action loadInitialData() {\n    if (!this.articleSlug) return Promise.resolve();\n    this.inProgress = true;\n    return articlesStore\n      .loadArticle(this.articleSlug, { acceptCached: true })\n      .then(\n        action(article => {\n          if (!article) throw new Error(\"Can't load original article\");\n          this.title = article.title;\n          this.description = article.description;\n          this.body = article.body;\n          this.tagList = article.tagList;\n        })\n      )\n      .finally(\n        action(() => {\n          this.inProgress = false;\n        })\n      );\n  }\n\n  @action reset() {\n    this.title = \"\";\n    this.description = \"\";\n    this.body = \"\";\n    this.tagList = [];\n  }\n\n  @action setTitle(title) {\n    this.title = title;\n  }\n\n  @action setDescription(description) {\n    this.description = description;\n  }\n\n  @action setBody(body) {\n    this.body = body;\n  }\n\n  @action addTag(tag) {\n    if (this.tagList.includes(tag)) return;\n    this.tagList.push(tag);\n  }\n\n  @action removeTag(tag) {\n    this.tagList = this.tagList.filter(t => t !== tag);\n  }\n\n  @action submit() {\n    this.inProgress = true;\n    this.errors = undefined;\n    const article = {\n      title: this.title,\n      description: this.description,\n      body: this.body,\n      tagList: this.tagList,\n      slug: this.articleSlug\n    };\n    return (this.articleSlug\n      ? articlesStore.updateArticle(article)\n      : articlesStore.createArticle(article)\n    )\n      .catch(\n        action(err => {\n          this.errors =\n            err.response && err.response.body && err.response.body.errors;\n          throw err;\n        })\n      )\n      .finally(\n        action(() => {\n          this.inProgress = false;\n        })\n      );\n  }\n}\n\nexport default new EditorStore();\n","import { observable, action } from \"mobx\";\nimport agent from \"../agent\";\n\nclass ProfileStore {\n  @observable profile = undefined;\n  @observable isLoadingProfile = false;\n\n  @action loadProfile(username) {\n    this.isLoadingProfile = true;\n    agent.Profile.get(username)\n      .then(\n        action(({ profile }) => {\n          this.profile = profile;\n        })\n      )\n      .finally(\n        action(() => {\n          this.isLoadingProfile = false;\n        })\n      );\n  }\n\n  @action follow() {\n    if (this.profile && !this.profile.following) {\n      this.profile.following = true;\n      agent.Profile.follow(this.profile.username).catch(\n        action(() => {\n          this.profile.following = false;\n        })\n      );\n    }\n  }\n\n  @action unfollow() {\n    if (this.profile && this.profile.following) {\n      this.profile.following = false;\n      agent.Profile.unfollow(this.profile.username).catch(\n        action(() => {\n          this.profile.following = true;\n        })\n      );\n    }\n  }\n}\n\nexport default new ProfileStore();\n","import { RouterStore } from \"mobx-router\";\n\nimport articlesStore from \"./articlesStore\";\nimport commentsStore from \"./commentsStore\";\nimport authStore from \"./authStore\";\nimport commonStore from \"./commonStore\";\nimport editorStore from \"./editorStore\";\nimport userStore from \"./userStore\";\nimport profileStore from \"./profileStore\";\n\nconst stores = {\n  articlesStore,\n  commentsStore,\n  authStore,\n  commonStore,\n  editorStore,\n  userStore,\n  profileStore,\n  router: new RouterStore()\n};\n\nexport default stores;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\n\nimport { Link } from \"mobx-router\";\nimport views from \"../config/views\";\n\nconst LoggedOutView = props => {\n  const { currentUser } = props.store.userStore;\n  if (!currentUser) {\n    return (\n      <ul className=\"nav navbar-nav pull-xs-right\">\n        <li className=\"nav-item\">\n          {/*<Link to=\"/\" className=\"nav-link\">*/}\n          {/*Home*/}\n          {/*</Link>*/}\n          <Link className={\"nav-link\"} view={views.home} store={props.store}>\n            Home\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          {/*<Link to=\"/login\" className=\"nav-link\">*/}\n          {/*Sign in*/}\n          {/*</Link>*/}\n          <Link className={\"nav-link\"} view={views.login} store={props.store}>\n            Sign in\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          {/*<Link to=\"/register\" className=\"nav-link\">*/}\n          {/*Sign up*/}\n          {/*</Link>*/}\n          <Link\n            className={\"nav-link\"}\n            view={views.register}\n            store={props.store}\n          >\n            Sign up\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n  return null;\n};\n\nconst LoggedInView = props => {\n  const { currentUser } = props.store.userStore;\n  if (currentUser) {\n    return (\n      <ul className=\"nav navbar-nav pull-xs-right\">\n        <li className=\"nav-item\">\n          {/*<Link to=\"/\" className=\"nav-link\">*/}\n          {/*Home*/}\n          {/*</Link>*/}\n          <Link className={\"nav-link\"} view={views.home} store={props.store}>\n            Home\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          {/*<Link to=\"/editor\" className=\"nav-link\">*/}\n          {/*<i className=\"ion-compose\" />*/}\n          {/*&nbsp;New Post*/}\n          {/*</Link>*/}\n          <Link className={\"nav-link\"} view={views.editor} store={props.store}>\n            <i className=\"ion-compose\" />\n            &nbsp;New Post\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          {/*<Link to=\"/settings\" className=\"nav-link\">*/}\n          {/*<i className=\"ion-gear-a\" />*/}\n          {/*&nbsp;Settings*/}\n          {/*</Link>*/}\n          <Link\n            className={\"nav-link\"}\n            view={views.settings}\n            store={props.store}\n          >\n            <i className=\"ion-gear-a\" />\n            &nbsp;Settings\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          {/*<Link to={`/@${currentUser.username}`} className=\"nav-link\">*/}\n          {/*<img src={currentUser.image} className=\"user-pic\" alt=\"\" />*/}\n          {/*{currentUser.username}*/}\n          {/*</Link>*/}\n          <Link\n            className={\"nav-link\"}\n            view={views.register}\n            store={props.store}\n            params={{ username: `@${currentUser.username}` }}\n          >\n            <img src={currentUser.image} className=\"user-pic\" alt=\"\" />\n            {currentUser.username}\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n\n  return null;\n};\n\n@inject(\"userStore\", \"commonStore\", \"store\")\n@observer\nclass Header extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-light\">\n        <div className=\"container\" style={{\n            maxWidth: 990,\n            margin: '0 auto',\n            overflow: 'auto',\n            zIndex: 1,\n        }}>\n          {/*<Link to=\"/\" className=\"navbar-brand\">*/}\n          {/*{this.props.commonStore.appName.toLowerCase()}*/}\n          {/*</Link>*/}\n          <Link\n            className={\"navbar-brand\"}\n            view={views.home}\n            store={this.props.store}\n          >\n            {this.props.commonStore.appName.toLowerCase()}\n          </Link>\n          <LoggedOutView {...this.props} />\n\n          <LoggedInView {...this.props} />\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import Header from \"./Header\";\nimport React from \"react\";\n// import { Switch, Route, withRouter } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\nimport { MobxRouter } from \"mobx-router\";\n\n@inject(\"userStore\", \"commonStore\")\n@observer\nclass App extends React.Component {\n  componentWillMount() {\n    if (!this.props.commonStore.token) {\n      this.props.commonStore.setAppLoaded();\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.commonStore.token) {\n      this.props.userStore\n        .pullUser()\n        .finally(() => this.props.commonStore.setAppLoaded());\n    }\n  }\n\n  render() {\n    if (this.props.commonStore.appLoaded) {\n      return (\n        <div>\n          <Header />\n          <MobxRouter />\n        </div>\n      );\n    }\n    return <Header />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport promiseFinally from \"promise.prototype.finally\";\n\nimport { useStrict } from \"mobx\";\nimport { Provider } from \"mobx-react\";\n\n// import { HashRouter } from \"react-router-dom\";\nimport { startRouter } from \"mobx-router\";\nimport views from \"./config/views\";\nimport stores from \"./stores\";\n\nimport App from \"./components/App\";\n\n// For easier debugging\n// window._____APP_STATE_____ = stores;\n\nstartRouter(views, stores);\npromiseFinally.shim();\nuseStrict(true);\n\nReactDOM.render(\n  <Provider {...stores} store={stores}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { observable, action } from \"mobx\";\nimport agent from \"../agent\";\n\nclass UserStore {\n  @observable currentUser;\n  @observable loadingUser;\n  @observable updatingUser;\n  @observable updatingUserErrors;\n\n  @action pullUser() {\n    this.loadingUser = true;\n    return agent.Auth.current()\n      .then(\n        action(({ user }) => {\n          this.currentUser = user;\n        })\n      )\n      .finally(\n        action(() => {\n          this.loadingUser = false;\n        })\n      );\n  }\n\n  @action updateUser(newUser) {\n    this.updatingUser = true;\n    return agent.Auth.save(newUser)\n      .then(\n        action(({ user }) => {\n          this.currentUser = user;\n        })\n      )\n      .finally(\n        action(() => {\n          this.updatingUser = false;\n        })\n      );\n  }\n\n  @action forgetUser() {\n    this.currentUser = undefined;\n  }\n}\n\nexport default new UserStore();\n","import superagentPromise from 'superagent-promise';\nimport _superagent from 'superagent';\nimport commonStore from './stores/commonStore';\nimport authStore from './stores/authStore';\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\nconst API_ROOT = 'https://conduit.productionready.io/api';\n\nconst encode = encodeURIComponent;\n\nconst handleErrors = err => {\n  if (err && err.response && err.response.status === 401) {\n    authStore.logout();\n  }\n  return err;\n};\n\nconst responseBody = res => res.body;\n\nconst tokenPlugin = req => {\n  if (commonStore.token) {\n    req.set('authorization', `Token ${commonStore.token}`);\n  }\n};\n\nconst requests = {\n  del: url =>\n    superagent\n      .del(`${API_ROOT}${url}`)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n  get: url =>\n    superagent\n      .get(`${API_ROOT}${url}`)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n  put: (url, body) =>\n    superagent\n      .put(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n  post: (url, body) =>\n    superagent\n      .post(`${API_ROOT}${url}`, body)\n      .use(tokenPlugin)\n      .end(handleErrors)\n      .then(responseBody),\n};\n\nconst Auth = {\n  current: () =>\n    requests.get('/user'),\n  login: (email, password) =>\n    requests.post('/users/login', { user: { email, password } }),\n  register: (username, email, password) =>\n    requests.post('/users', { user: { username, email, password } }),\n  save: user =>\n    requests.put('/user', { user })\n};\n\nconst Tags = {\n  getAll: () => requests.get('/tags')\n};\n\nconst limit = (count, p) => `limit=${count}&offset=${p ? p * count : 0}`;\nconst omitSlug = article => Object.assign({}, article, { slug: undefined })\n\nconst Articles = {\n  all: (page, lim = 10) =>\n    requests.get(`/articles?${limit(lim, page)}`),\n  byAuthor: (author, page, query) =>\n    requests.get(`/articles?author=${encode(author)}&${limit(5, page)}`),\n  byTag: (tag, page, lim = 10) =>\n    requests.get(`/articles?tag=${encode(tag)}&${limit(lim, page)}`),\n  del: slug =>\n    requests.del(`/articles/${slug}`),\n  favorite: slug =>\n    requests.post(`/articles/${slug}/favorite`),\n  favoritedBy: (author, page) =>\n    requests.get(`/articles?favorited=${encode(author)}&${limit(5, page)}`),\n  feed: () =>\n    requests.get('/articles/feed?limit=10&offset=0'),\n  get: slug =>\n    requests.get(`/articles/${slug}`),\n  unfavorite: slug =>\n    requests.del(`/articles/${slug}/favorite`),\n  update: article =>\n    requests.put(`/articles/${article.slug}`, { article: omitSlug(article) }),\n  create: article =>\n    requests.post('/articles', { article })\n};\n\nconst Comments = {\n  create: (slug, comment) =>\n    requests.post(`/articles/${slug}/comments`, { comment }),\n  delete: (slug, commentId) =>\n    requests.del(`/articles/${slug}/comments/${commentId}`),\n  forArticle: slug =>\n    requests.get(`/articles/${slug}/comments`)\n};\n\nconst Profile = {\n  follow: username =>\n    requests.post(`/profiles/${username}/follow`),\n  get: username =>\n    requests.get(`/profiles/${username}`),\n  unfollow: username =>\n    requests.del(`/profiles/${username}/follow`)\n};\n\nexport default {\n  Articles,\n  Auth,\n  Comments,\n  Profile,\n  Tags,\n};\n","import { observable, action } from \"mobx\";\nimport agent from \"../agent\";\nimport userStore from \"./userStore\";\nimport commonStore from \"./commonStore\";\n\nclass AuthStore {\n  @observable inProgress = false;\n  @observable errors = undefined;\n\n  @observable values = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  @action setUsername(username) {\n    this.values.username = username;\n  }\n\n  @action setEmail(email) {\n    this.values.email = email;\n  }\n\n  @action setPassword(password) {\n    this.values.password = password;\n  }\n\n  @action reset() {\n    this.values.username = \"\";\n    this.values.email = \"\";\n    this.values.password = \"\";\n  }\n\n  @action login() {\n    this.inProgress = true;\n    this.errors = undefined;\n    return agent.Auth.login(this.values.email, this.values.password)\n      .then(({ user }) => commonStore.setToken(user.token))\n      .then(() => userStore.pullUser())\n      .catch(\n        action(err => {\n          this.errors =\n            err.response && err.response.body && err.response.body.errors;\n          throw err;\n        })\n      )\n      .finally(\n        action(() => {\n          this.inProgress = false;\n        })\n      );\n  }\n\n  @action register() {\n    this.inProgress = true;\n    this.errors = undefined;\n    return agent.Auth.register(\n      this.values.username,\n      this.values.email,\n      this.values.password\n    )\n      .then(({ user }) => commonStore.setToken(user.token))\n      .then(() => userStore.pullUser())\n      .catch(\n        action(err => {\n          this.errors =\n            err.response && err.response.body && err.response.body.errors;\n          throw err;\n        })\n      )\n      .finally(\n        action(() => {\n          this.inProgress = false;\n        })\n      );\n  }\n\n  @action logout() {\n    commonStore.setToken(undefined);\n    userStore.forgetUser();\n    return Promise.resolve();\n  }\n}\n\nexport default new AuthStore();\n"],"sourceRoot":""}