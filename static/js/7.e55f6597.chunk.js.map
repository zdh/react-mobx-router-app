{"version":3,"sources":["components/Settings.js","components/ListErrors.js"],"names":["SettingsForm","inject","observer","props","_this","Object","_Users_SixCup_GitHub_COLD_react_mobx_router_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_SixCup_GitHub_COLD_react_mobx_router_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_SixCup_GitHub_COLD_react_mobx_router_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","image","username","bio","email","password","updateState","field","ev","newState","assign","_Users_SixCup_GitHub_COLD_react_mobx_router_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","value","setState","submitForm","preventDefault","user","onSubmitForm","userStore","currentUser","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","onSubmit","className","type","placeholder","onChange","rows","disabled","updatingUser","React","Component","Settings","handleClickLogout","_this2","authStore","logout","then","store","router","goTo","views","home","_this3","_ListErrors__WEBPACK_IMPORTED_MODULE_6__","errors","updatingUserErrors","updateUser","onClick","ListErrors","react__WEBPACK_IMPORTED_MODULE_5___default","keys","map","key"],"mappings":"gMASMA,EAFLC,iBAAO,eACPC,iCAEC,SAAAF,EAAYG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAP,IACjBI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAL,GAAAU,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,IAAK,GACLC,MAAO,GACPC,SAAU,IAGZZ,EAAKa,YAAc,SAAAC,GAAK,OAAI,SAAAC,GAC1B,IAAMR,EAAQP,EAAKO,MACbS,EAAWf,OAAOgB,OAAO,GAAIV,EAAlBN,OAAAiB,EAAA,EAAAjB,CAAA,GAA4Ba,EAAQC,EAAGI,OAAOC,QAC/DpB,EAAKqB,SAASL,KAGhBhB,EAAKsB,WAAa,SAAAP,GAChBA,EAAGQ,iBAEH,IAAMC,EAAOvB,OAAOgB,OAAO,GAAIjB,EAAKO,OAC/BiB,EAAKZ,iBACDY,EAAKZ,SAGdZ,EAAKD,MAAM0B,aAAaD,IAzBTxB,oFA8BbG,KAAKJ,MAAM2B,UAAUC,aACvB1B,OAAOgB,OAAOd,KAAKI,MAAO,CACxBC,MAAOL,KAAKJ,MAAM2B,UAAUC,YAAYnB,OAAS,GACjDC,SAAUN,KAAKJ,MAAM2B,UAAUC,YAAYlB,SAC3CC,IAAKP,KAAKJ,MAAM2B,UAAUC,YAAYjB,KAAO,GAC7CC,MAAOR,KAAKJ,MAAM2B,UAAUC,YAAYhB,yCAM5C,OACEiB,EAAAC,EAAAC,cAAA,QAAMC,SAAU5B,KAAKmB,YACnBM,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAA,YAAUE,UAAU,cAClBJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,eACVC,KAAK,OACLC,YAAY,yBACZd,MAAOjB,KAAKI,MAAMC,MAClB2B,SAAUhC,KAAKU,YAAY,YAI/Be,EAAAC,EAAAC,cAAA,YAAUE,UAAU,cAClBJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,+BACVC,KAAK,OACLC,YAAY,WACZd,MAAOjB,KAAKI,MAAME,SAClB0B,SAAUhC,KAAKU,YAAY,eAI/Be,EAAAC,EAAAC,cAAA,YAAUE,UAAU,cAClBJ,EAAAC,EAAAC,cAAA,YACEE,UAAU,+BACVI,KAAK,IACLF,YAAY,sBACZd,MAAOjB,KAAKI,MAAMG,IAClByB,SAAUhC,KAAKU,YAAY,UAI/Be,EAAAC,EAAAC,cAAA,YAAUE,UAAU,cAClBJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,+BACVC,KAAK,QACLC,YAAY,QACZd,MAAOjB,KAAKI,MAAMI,MAClBwB,SAAUhC,KAAKU,YAAY,YAI/Be,EAAAC,EAAAC,cAAA,YAAUE,UAAU,cAClBJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,+BACVC,KAAK,WACLC,YAAY,eACZd,MAAOjB,KAAKI,MAAMK,SAClBuB,SAAUhC,KAAKU,YAAY,eAI/Be,EAAAC,EAAAC,cAAA,UACEE,UAAU,uCACVC,KAAK,SACLI,SAAUlC,KAAKJ,MAAM2B,UAAUY,cAHjC,4BA/FiBC,IAAMC,mBA+G3BC,EAHL5C,iBAAO,YAAa,YAAa,WAEjCC,gOAEC4C,kBAAoB,kBAClBC,EAAK5C,MAAM6C,UAAUC,SAASC,KAAK,kBAAMH,EAAK5C,MAAMgD,MAAMC,OAAOC,KAAKC,IAAMC,iFAErE,IAAAC,EAAAjD,KACP,OACEyB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBAAd,iBAEAJ,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYC,OAAQnD,KAAKJ,MAAM2B,UAAU6B,qBAEzC3B,EAAAC,EAAAC,cAAClC,EAAD,CACE+B,YAAaxB,KAAKJ,MAAM2B,UAAUC,YAClCF,aAAc,SAAAD,GAAI,OAAI4B,EAAKrD,MAAM2B,UAAU8B,WAAWhC,MAGxDI,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UACEE,UAAU,yBACVyB,QAAStD,KAAKuC,mBAFhB,uCArBSH,IAAMC,mBAmCdC,wGCzJTiB,mLAEF,IAAMJ,EAASnD,KAAKJ,MAAMuD,OAC1B,OAAIA,EAEAK,EAAA9B,EAAAC,cAAA,MAAIE,UAAU,kBACX/B,OAAO2D,KAAKN,GAAQO,IAAI,SAAAC,GACvB,OACEH,EAAA9B,EAAAC,cAAA,MAAIgC,IAAKA,GACNA,EADH,IACSR,EAAOQ,OAOjB,YAhBYvB,IAAMC,WAqBhBkB","file":"static/js/7.e55f6597.chunk.js","sourcesContent":["import ListErrors from \"./ListErrors\";\nimport React from \"react\";\n// import { withRouter } from \"react-router-dom\";\nimport { inject, observer } from \"mobx-react\";\n\nimport views from \"../config/views\";\n\n@inject(\"userStore\")\n@observer\nclass SettingsForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: \"\",\n      username: \"\",\n      bio: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.updateState = field => ev => {\n      const state = this.state;\n      const newState = Object.assign({}, state, { [field]: ev.target.value });\n      this.setState(newState);\n    };\n\n    this.submitForm = ev => {\n      ev.preventDefault();\n\n      const user = Object.assign({}, this.state);\n      if (!user.password) {\n        delete user.password;\n      }\n\n      this.props.onSubmitForm(user);\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.userStore.currentUser) {\n      Object.assign(this.state, {\n        image: this.props.userStore.currentUser.image || \"\",\n        username: this.props.userStore.currentUser.username,\n        bio: this.props.userStore.currentUser.bio || \"\",\n        email: this.props.userStore.currentUser.email\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.submitForm}>\n        <fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"URL of profile picture\"\n              value={this.state.image}\n              onChange={this.updateState(\"image\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"text\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.updateState(\"username\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <textarea\n              className=\"form-control form-control-lg\"\n              rows=\"8\"\n              placeholder=\"Short bio about you\"\n              value={this.state.bio}\n              onChange={this.updateState(\"bio\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.updateState(\"email\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"password\"\n              placeholder=\"New Password\"\n              value={this.state.password}\n              onChange={this.updateState(\"password\")}\n            />\n          </fieldset>\n\n          <button\n            className=\"btn btn-lg btn-primary pull-xs-right\"\n            type=\"submit\"\n            disabled={this.props.userStore.updatingUser}\n          >\n            Update Settings\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\n@inject(\"userStore\", \"authStore\", \"store\")\n// @withRouter\n@observer\nclass Settings extends React.Component {\n  handleClickLogout = () =>\n    this.props.authStore.logout().then(() => this.props.store.router.goTo(views.home));\n\n  render() {\n    return (\n      <div className=\"settings-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3 col-xs-12\">\n              <h1 className=\"text-xs-center\">Your Settings</h1>\n\n              <ListErrors errors={this.props.userStore.updatingUserErrors} />\n\n              <SettingsForm\n                currentUser={this.props.userStore.currentUser}\n                onSubmitForm={user => this.props.userStore.updateUser(user)}\n              />\n\n              <hr />\n\n              <button\n                className=\"btn btn-outline-danger\"\n                onClick={this.handleClickLogout}\n              >\n                Or click here to logout.\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React from \"react\";\n\nclass ListErrors extends React.Component {\n  render() {\n    const errors = this.props.errors;\n    if (errors) {\n      return (\n        <ul className=\"error-messages\">\n          {Object.keys(errors).map(key => {\n            return (\n              <li key={key}>\n                {key} {errors[key]}\n              </li>\n            );\n          })}\n        </ul>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default ListErrors;\n"],"sourceRoot":""}